import { Vector3 } from 'three';
import { IfcAxes, IfcGrid, IfcClipper } from '../display';
import { IfcContext } from '../context';
export declare class EdgesVectorizer {
    private context;
    private clipper;
    private grid;
    private axes;
    cv: any;
    minimumOffset: number;
    buckets: {
        position: Vector3;
        row: number;
        column: number;
    }[];
    bucketsOffset: Vector3;
    polygons: number[][];
    private currentBucketIndex;
    private dims;
    private readonly cvCamera;
    private readonly controls;
    private readonly bucketMesh;
    private readonly htmlImage;
    constructor(context: IfcContext, clipper: IfcClipper, grid: IfcGrid, axes: IfcAxes);
    dispose(): void;
    initializeOpenCV(openCV: any): void;
    onVectorizationFinished?: () => Promise<void>;
    clear(): void;
    vectorize(bucketWidth: number): Promise<void>;
    private setupCamera;
    private toggleVisibility;
    private renderBucket;
    private computeBucketsOrigin;
    private generateAllBuckets;
    private getBucketPosition;
    private getBucketCount;
    private updateBucketDimensions;
    private resetBucketDimensions;
    private getSizeAndCenter;
    private computeMinAndMax;
    private getEdges2DPoints;
}
